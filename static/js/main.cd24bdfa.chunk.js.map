{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Warble.js","utils/fbase/index.js","components/FileModule.js","components/WarbleFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","user.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","class","faGoogle","faGithub","Warble","warbleObj","isOwner","editing","setEditing","text","newWarble","setNewWarble","onDeleteCilck","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","alt","faTrash","faPencilAlt","getAttachmentUrl","user","attachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","FileModule","setAttachment","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","backgroundImage","document","querySelector","faTimes","WarbleFactory","userObj","warble","setWarble","createdAt","Date","now","creatorId","collection","add","maxLength","Home","warbles","setWarbles","useEffect","isMounted","onSnapshot","snapshot","docs","map","data","warbleArray","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","myWarbles","setMyWarbles","isShowEditProfile","setIsShowEditProfile","photoURL","updateProfile","getMyWarbles","where","orderBy","get","myWarbleArray","autoFocus","length","signOut","push","Navigation","to","faUser","AppRouter","isLoggedIn","Boolean","exact","path","defaultUser","App","init","setInit","setUserObj","onAuthStateChanged","args","currentUser","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"+QAeAA,gBAVuB,CACrBC,OAASC,0CACTC,WAAYD,8BACZE,YAAaF,qCACbG,UAAWH,cACXI,cAAeJ,0BACfK,kBAAmBL,eACnBM,MAAON,8CAKF,IAAMO,EAAmBT,EACnBU,EAAcV,SACdW,EAAYX,cAEZY,EAAiBZ,YCsDfa,EAxEE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGeJ,oBAAS,GAHxB,mBAGdK,EAHc,KAGFC,EAHE,OAIKN,mBAAS,IAJd,mBAIdO,EAJc,KAIPC,EAJO,KAMfC,EAAW,SAACC,GAAW,IAAD,EACMA,EAAzBC,OAASC,EADU,EACVA,KAAMC,EADI,EACJA,MAEV,UAATD,EACDV,EAASW,GACQ,aAATD,GACRR,EAAYS,IAIVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAIVX,EAJU,gCAKLT,EAAYqB,+BAA+BhB,EAAOE,GAL7C,6CAOLP,EAAYsB,2BAA2BjB,EAAOE,GAPzC,yDAUbK,EAAS,KAAMW,SAVF,0DAAH,sDAgBd,OACE,oCACE,0BACEC,UAAU,sBACVN,SAAUA,GAEV,2BACEM,UAAU,mBACVR,KAAK,QACLS,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRV,MAAOZ,EACPQ,SAAUA,IAEZ,2BACEW,UAAU,mBACVR,KAAK,WACLS,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRV,MAAOV,EACPM,SAAUA,IAGZ,2BACEW,UAAU,qCACVC,KAAK,SACLR,MAAOR,EAAa,iBAAmB,WAExCE,GAAS,0BAAMa,UAAU,oBAAoBb,IAEhD,0BACEa,UAAU,+BACVI,QApCgB,kBAAMlB,GAAc,SAAAmB,GAAI,OAAKA,OAqC7CpB,EAAa,UAAY,qB,eCpBlBqB,EA5CF,WACX,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,iBAAAK,EAAA,4DAMP,YAJHH,EACNF,EADFC,OAAQC,MAKRgB,EAAW,IAAIjC,EAAiBkC,KAAKC,mBACnB,WAATlB,IACTgB,EAAW,IAAIjC,EAAiBkC,KAAKE,oBATnB,SAYdnC,EAAYoC,gBAAgBJ,GAZd,2CAAH,sDAenB,OACE,yBAAKR,UAAU,QACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEa,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAACC,aAAc,KAExB,0BAAMC,MAAM,qCAAZ,oBAEF,kBAAC,EAAD,MACA,yBAAKnB,UAAU,gBACb,4BACEA,UAAU,sBACVR,KAAK,SACLY,QAASG,GAHX,wBAIsB,kBAAC,IAAD,CAAiBM,KAAMO,OAC7C,4BACEpB,UAAU,sBACVR,KAAK,SACLY,QAASG,GAHX,wBAIsB,kBAAC,IAAD,CAAiBM,KAAMQ,U,gBCwDtCC,EA9FA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAAa,EACT5C,oBAAS,GADA,mBAChC6C,EADgC,KACvBC,EADuB,OAEL9C,mBAAS2C,EAAUI,MAFd,mBAEhCC,EAFgC,KAErBC,EAFqB,KAIjCC,EAAa,uCAAG,sBAAAnC,EAAA,0DACToC,OAAOC,QAAQ,gDADN,gCAGZvD,EAAUwD,IAAV,kBAAyBV,EAAUW,KAAMC,SAH7B,WAKdZ,EAAUa,cALI,gCAMV1D,EAAe2D,WAAWd,EAAUa,eAAeD,SANzC,2CAAH,qDAWbG,EAAgB,kBAAMZ,GAAW,SAACrB,GAAD,OAAWA,MAE5CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETnB,EAAUwD,IAAV,kBAAyBV,EAAUW,KAAMK,OAAO,CAACZ,KAAMC,IAF9C,OAGfF,GAAW,GAHI,2CAAH,sDAcd,OACE,yBACE1B,UAAS,iBAAYyB,EAAU,YAAc,KAE5CA,EACC,oCACE,0BACEzB,UAAU,wBACVN,SAAUA,GAEV,2BACEM,UAAU,gCACVC,KAAK,OACLC,YAAY,mBACZT,MAAOmC,EACPzB,UAAQ,EACRd,SAxBK,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAGZoC,EAAapC,MAqBL,2BACEO,UAAU,8CACVC,KAAK,SACLR,MAAM,mBAGV,0BACEO,UAAU,2DACVI,QAASkC,GAFX,WAMF,oCACGf,EAAUa,cACT,yBACEI,IAAKjB,EAAUa,cACfK,MAAM,KACNC,OAAO,KACPC,IAAI,oBAGN,kBAAC,IAAD,CACE9B,KAAMC,IACNC,MAAO,UACPC,KAAK,OAGT,4BAAKO,EAAUI,MACdH,GACC,oCACE,yBAAKxB,UAAU,4BACb,uCAEF,yBAAKA,UAAU,kBACb,0BAAMI,QAAS0B,GAAe,kBAAC,IAAD,CAAiBjB,KAAM+B,OACrD,0BAAMxC,QAASkC,GAAe,kBAAC,IAAD,CAAiBzB,KAAMgC,Y,QCvFxDC,EAAgB,uCAAG,WAAOC,EAAMC,GAAb,iBAAArD,EAAA,6DACxBsD,EAAgBvE,EACCwE,MACAC,MAFD,UAEUJ,EAAKK,IAFf,YAEsBC,gBAHd,SAIPJ,EAAcK,UAAUN,EAAY,YAJ7B,cAIxBO,EAJwB,gBAKjBA,EAASL,IAAIM,iBALI,mFAAH,wDCiEdC,EAhEI,SAAC,GAAiC,IAAhCT,EAA+B,EAA/BA,WAAYU,EAAmB,EAAnBA,cAyB/B,OACE,yBAAK1D,UAAU,eACb,2BACEA,UAAU,qCACV2D,QAAQ,eAER,4CACA,kBAAC,IAAD,CAAiB9C,KAAM+C,OAEzB,2BACE5D,UAAU,oBACVkC,GAAG,cACHjC,KAAK,OACL4D,OAAO,UACPxE,SAtCe,SAACC,GAAW,IAIzBwE,EADFxE,EADFC,OAASwE,MAEW,GAChBC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,SAACC,GAAmB,IAEnBC,EACdD,EADFE,cAAgBD,OAElBV,EAAcU,IAGbN,GACDE,EAAOM,cAAcR,MAyBpBd,GACC,yBAAKhD,UAAU,2BACb,yBACEA,UAAU,gCACViB,MAAO,CAACsD,gBAAiBvB,GACzBR,IAAKQ,EACLP,MAAM,OACNC,OAAO,OACPC,IAAI,sBAEN,yBACE3C,UAAU,gCACVI,QAjCgB,WACxBsD,EAAc,IACdc,SAASC,cAAc,oBAAoBhF,MAAQ,KAiC3C,wCACA,kBAAC,IAAD,CAAiBoB,KAAM6D,UCQpBC,EA/DO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACThG,mBAAS,IADA,mBAC9BiG,EAD8B,KACtBC,EADsB,OAEDlG,mBAAS,IAFR,mBAE9BoE,EAF8B,KAElBU,EAFkB,KAI/BhE,EAAQ,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,yDACD,KAAXkF,EADY,oDAKfvF,EAAMM,iBAEFwC,EAAgB,IACjBY,EARY,gCASUF,EAAiB8B,EAAS5B,GATpC,OASbZ,EATa,qBAYTb,EAAY,CAChBI,KAAMkD,EACNE,UAAWC,KAAKC,MAChBC,UAAWN,EAAQxB,IACnBhB,iBAhBa,UAkBT3D,EAAU0G,WNPwB,UMOiBC,IAAI7D,GAlB9C,QAoBfuD,EAAU,IACVpB,EAAc,IArBC,4CAAH,sDA+Bd,OACE,0BACE1D,UAAU,sBACVN,SAAUA,GAEV,yBAAKM,UAAU,kCACb,2BACEA,UAAU,kCACVC,KAAK,OACLC,YAAY,uBACZmF,UAAW,IACXhG,SAlBS,SAACC,GAAW,IAEhBG,EACPH,EADFC,OAASE,MAEXqF,EAAUrF,IAeJA,MAAOoF,IAET,2BACE7E,UAAU,6CACVC,KAAK,SACLR,MAAM,YAGV,kBAAC,EAAD,CACEuD,WAAYA,EACZU,cAAeA,MCpBR4B,EArCF,SAAC,GAAiB,IAAfV,EAAc,EAAdA,QAAc,EACEhG,mBAAS,IADX,mBACrB2G,EADqB,KACZC,EADY,KAqB5B,OAlBAC,qBAAU,WACR,IAAIC,GAAY,EAchB,OAXAjH,EAAU0G,WPQ8B,UORWQ,WAAnD,uCAA8D,WAAMC,GAAN,eAAAjG,EAAA,sEAClCiG,EAASC,KAAKC,KAAI,SAAA7D,GAAG,oBAC7CC,GAAID,EAAIC,IACLD,EAAI8D,WAHmD,OACtDC,EADsD,OAMzDN,GACDF,EAAWQ,GAP+C,2CAA9D,uDAWO,kBAAMN,GAAY,KACxB,IAGD,yBAAK1F,UAAU,kBACb,kBAAC,EAAD,CAAe4E,QAASA,IACxB,yBAAK5E,UAAU,iBACZuF,EAAQO,KAAI,SAAAjB,GAAM,OACjB,kBAAC,EAAD,CACEoB,IAAKpB,EAAO3C,GACZX,UAAWsD,EACXrD,QAASqD,EAAOK,YAAcN,EAAQxB,YCuGnC8C,EAlIC,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,QAASuB,EAAkB,EAAlBA,YACpBC,EAAUC,cAD4B,EAEAzH,mBAASgG,EAAQ0B,aAFjB,mBAErCC,EAFqC,KAErBC,EAFqB,OAGR5H,mBAAS,IAHD,mBAGrCoE,EAHqC,KAGzBU,EAHyB,OAIV9E,mBAAS,IAJC,mBAIrC6H,EAJqC,KAI1BC,EAJ0B,OAKM9H,oBAAS,GALf,mBAKrC+H,EALqC,KAKlBC,EALkB,KAoBtClH,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACfL,EAAMM,iBAEFwC,EAAgB,IACjBY,EAJY,gCAKUF,EAAiB8B,EAAS5B,GALpC,OAKbZ,EALa,iBAQRkE,EAAyB1B,EAAzB0B,YAAaO,EAAYjC,EAAZiC,UAEjBN,GAAkBD,IAAgBC,EAVtB,kCAWP3B,EAAQkC,cAAc,CAACR,YAAaC,IAX7B,YAaZnE,GAAiByE,IAAazE,EAblB,kCAcPwC,EAAQkC,cAAc,CAACD,SAAUzE,IAd1B,QAiBfsB,EAAc,IACdyC,IAlBe,4CAAH,sDAqBRY,EAAY,uCAAG,8BAAApH,EAAA,sEACGlB,EACD0G,WR9BmB,UQ+BnB6B,MAAM,YAAa,KAAMpC,EAAQxB,KACjC6D,QAAQ,YAAa,QACrBC,MALF,OACb3B,EADa,OAOb4B,EAAgB5B,EAAQM,KAAKC,KAAI,SAAA7D,GAAG,oBACxCC,GAAID,EAAIC,IACLD,EAAI8D,WAGTW,EAAaS,GAZM,2CAAH,qDA+BlB,OAZA1B,qBAAU,WACR,IAAIC,GAAY,EAQhB,OANAjH,EAAU0G,WRlD8B,UQkDWQ,YAAW,WACzDD,GACDqB,OAIG,kBAAMrB,GAAY,KACxB,IAGD,yBAAK1F,UAAU,qBACb,yBACEA,UAAU,sBACVI,QApBoB,WACxBwG,GAAsBD,KAqBlB,6CAEDA,GACC,oCACE,kBAAC,EAAD,CACE3D,WAAYA,EACZU,cAAeA,IAEjB,0BACE1D,UAAU,eACVN,SAAUA,GAEV,2BACEM,UAAU,iCACVC,KAAK,OACLC,YAAY,eACZT,MAAO8G,EACPa,WAAS,EACT/H,SApFK,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAGZ+G,EAAkB/G,MAiFV,2BACEO,UAAU,+CACVC,KAAK,SACLR,MAAM,qBAKd,yBAAKO,UAAU,uBACb,0CACA,yBAAKA,UAAU,gCACXyG,EAAUY,OAAS,EACnBZ,EAAUX,KAAI,SAAAjB,GAAM,OAClB,kBAAC,EAAD,CACEoB,IAAKpB,EAAO3C,GACZX,UAAWsD,EACXrD,QAASqD,EAAOK,YAAcN,EAAQxB,SAI1C,yBAAKpD,UAAU,+BAAf,gBAIN,0BACEA,UAAU,0DACVI,QArHgB,WACpB5B,EAAY8I,UACZlB,EAAQmB,KAAK,OAiHX,aChFSC,EA3CI,SAAC,GAAiB,IAAf5C,EAAc,EAAdA,QACpB,OACE,yBAAK5E,UAAU,cACb,wBAAIA,UAAU,oBACZ,4BACE,kBAAC,IAAD,CACEyH,GAAG,IACHzH,UAAU,0BAEV,kBAAC,IAAD,CACEa,KAAMC,IACNC,MAAO,UACPC,KAAK,OAEP,0BAAMhB,UAAU,gDAAhB,UAGJ,4BACE,kBAAC,IAAD,CACEyH,GAAG,WACHzH,UAAU,0BAET4E,EAAQiC,SACP,yBAAKrE,IAAKoC,EAAQiC,SAAUpE,MAAM,KAAKC,OAAO,KAAKC,IAAI,kBAEvD,kBAAC,IAAD,CACE9B,KAAM6G,IACN3G,MAAO,UACPC,KAAK,OAGT,0BAAMhB,UAAU,mDACd4E,EAAQ0B,YAAR,UACK1B,EAAQ0B,YADb,kBAEE,gBCADqB,EAjCG,SAAC,GAA8B,IAA5B/C,EAA2B,EAA3BA,QAASuB,EAAkB,EAAlBA,YACtByB,EAAaC,QAAQjD,GAE3B,OACE,kBAAC,IAAD,KACGgD,GAAc,kBAAC,EAAD,CAAYhD,QAASA,IACpC,kBAAC,IAAD,KACGgD,EACC,oCACE,yBAAK5H,UAAU,UACb,kBAAC,IAAD,CAAO8H,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAMnD,QAASA,KAEjB,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAD,CACEnD,QAASA,EACTuB,YAAaA,OAMrB,oCACE,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,WC1BCC,EALK,CAClB1B,YAAa,UACbO,SAAU,ICwDGoB,MArDf,WAAgB,IAAD,EACWrJ,oBAAS,GADpB,mBACNsJ,EADM,KACAC,EADA,OAEiBvJ,mBAAS,MAF1B,mBAENgG,EAFM,KAEGwD,EAFH,KAsCb,OAlCA3C,qBAAU,WACR,IAAIC,GAAY,EAiBhB,OAfAlH,EAAY6J,oBAAmB,SAAAtF,GAC1B2C,IACD0C,EAAWrF,EAAO,CAChBuD,YAAavD,EAAKuD,aAAe0B,EAAY1B,YAC7CO,SAAU9D,EAAK8D,UAAYmB,EAAYnB,SACvCzD,IAAKL,EAAKK,IACV0D,cAAe,SAACwB,GACdvF,EAAK+D,cAAcwB,KAEnB,MAEJH,GAAQ,OAIL,kBAAMzC,GAAY,KACxB,IAgBD,oCACGwC,EACC,kBAAC,EAAD,CACEtD,QAASA,EACTuB,YAhBY,WAClB,IAAMpD,EAAOvE,EAAY+J,YAEzBH,EAAW,CACT9B,YAAavD,EAAKuD,YAClBO,SAAU9D,EAAK8D,SACfzD,IAAKL,EAAKK,IACV0D,cAAe,SAACwB,GAAD,OAAUvF,EAAK+D,cAAcwB,SAY1C,yBAAKtI,UAAU,aAAf,mBAEF,4BAAQA,UAAU,oBAAlB,kBAAoD,IAAIgF,MAAOwD,iB,MChDrEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnE,SAASoE,eAAe,W","file":"static/js/main.cd24bdfa.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey:  process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore()\nexport const FIRESTORE_DB_COLLECTION_NAME = \"nweets\" // -> change to warbles \nexport const storageService = firebase.storage()","import { authService } from \"fbase\"\nimport React, { useState } from \"react\"\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [newAccount, setNewAccount] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  const onChange = (event) => {\n    const {target: {name, value}} = event\n    \n    if(name === \"email\") {\n      setEmail(value)\n    } else if(name === \"password\") {\n      setPassword(value)\n    }\n  }\n  \n  const onSubmit = async (event) => {\n    event.preventDefault()\n    \n    try {\n      if(newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password)\n      } else {\n        await authService.signInWithEmailAndPassword(email, password)\n      }\n    } catch(error) {\n      setError(error.message)\n    }\n  }\n\n  const toggleAccount = () => setNewAccount(prev => !prev)\n\n  return (\n    <>  \n      <form \n        className=\"auth-form container\"\n        onSubmit={onSubmit}\n      >\n        <input \n          className=\"auth-form__input\"\n          name=\"email\" \n          type=\"email\" \n          placeholder=\"Email\" \n          required \n          value={email}\n          onChange={onChange}          \n        />\n        <input \n          className=\"auth-form__input\"\n          name=\"password\" \n          type=\"password\" \n          placeholder=\"Password\" \n          required \n          value={password}\n          onChange={onChange}\n          \n        />\n        <input \n          className=\"auth-form__input auth-form__submit\"\n          type=\"submit\" \n          value={newAccount ? \"Create Account\" : \"Log In\"} \n        />\n        {error && <span className=\"auth-form__error\">{error}</span>}\n      </form>\n      <span \n        className=\"auth-switch brand-font-color\"\n        onClick={toggleAccount}\n      >{newAccount ? \"Sign in\" : \"Create Account \"}</span>\n    </>\n  )\n}\n\nexport default AuthForm","import { authService, firebaseInstance } from \"fbase\"\nimport React from \"react\"\nimport AuthForm from \"components/AuthForm\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\"\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target:{name}\n    } = event\n    let provider\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider()\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider()\n    }\n\n    await authService.signInWithPopup(provider)\n  }\n\n  return (\n    <div className=\"auth\">\n      <div className=\"auth__title\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{marginBottom: 5}}\n        />\n        <span class=\"auth__title-name brand-font-color\">Warbler ver 1.0</span>\n      </div>\n      <AuthForm />\n      <div className=\"auth__social\">\n        <button \n          className=\"auth__social-google\"\n          name=\"google\"\n          onClick={onSocialClick}\n        >Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n        <button \n          className=\"auth__social-github\"\n          name=\"github\"\n          onClick={onSocialClick}\n        >Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth","import { dbService, storageService } from \"fbase\"\nimport React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nconst Warble = ({warbleObj, isOwner}) => {\n  const [editing, setEditing] = useState(false)\n  const [newWarble, setNewWarble] = useState(warbleObj.text)\n  \n  const onDeleteCilck = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this warble?\")\n    if (ok) {\n      await dbService.doc(`warbles/${warbleObj.id}`).delete()\n      \n      if (warbleObj.attachmentUrl) { // 이미지 없이 올려진 warble 제거 시 에러 방지\n        await storageService.refFromURL(warbleObj.attachmentUrl).delete()\n      }\n    }\n  }\n\n  const toggleEditing = () => setEditing((prev) => !prev)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    await dbService.doc(`warbles/${warbleObj.id}`).update({text: newWarble})\n    setEditing(false)\n  }\n\n  const onChange = (event) => {\n    const {\n      target: { value }\n    } = event\n\n    setNewWarble(value)\n  }\n\n  return (\n    <div \n      className={`warble ${editing ? 'mode-edit' : ''}`}\n    >\n      {editing ? (\n        <>\n          <form \n            className=\"warble-form container\"\n            onSubmit={onSubmit}\n          >\n            <input\n              className=\"warble-form__input form-input\"\n              type=\"text\" \n              placeholder=\"Edit your warble\" \n              value={newWarble} \n              required\n              onChange={onChange}\n            />\n            <input \n              className=\"warble-form--submit form-btn brand-bg-color\"\n              type=\"submit\" \n              value=\"Update Warble\" \n            />\n          </form>\n          <span \n            className=\"warble-button--cancel form-btn brand-bg-color cancel-btn\"\n            onClick={toggleEditing}\n          >Cancel</span>\n        </>\n      ) : (\n        <>\n          {warbleObj.attachmentUrl ? (\n            <img \n              src={warbleObj.attachmentUrl} \n              width=\"28\" \n              height=\"28\" \n              alt=\"user attachment\"\n            />\n          ) : (\n            <FontAwesomeIcon \n              icon={faTwitter}\n              color={\"#04AAFF\"} \n              size=\"2x\"\n            />\n          )}\n          <h4>{warbleObj.text}</h4>\n          {isOwner && (\n            <>\n              <div className=\"warble-me brand-bg-color\">\n                <span>Edit</span>\n              </div>\n              <div className=\"warble-actions\">\n                <span onClick={onDeleteCilck}><FontAwesomeIcon icon={faTrash} /></span>\n                <span onClick={toggleEditing}><FontAwesomeIcon icon={faPencilAlt} /></span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Warble","import { storageService } from \"fbase\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport const getAttachmentUrl = async (user, attachment) => {\n  const attachmentRef = storageService\n                        .ref()\n                        .child(`${user.uid}/${uuidv4()}`)\n  const response = await attachmentRef.putString(attachment, \"data_url\")\n  return await response.ref.getDownloadURL()\n}","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\"\n\nconst FileModule = ({attachment, setAttachment}) => {\n  const onFileChange = (event) => {\n    const {\n      target: {files}\n    } = event\n    const theFile = files[0]\n    const reader = new FileReader()\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result}\n      } = finishedEvent\n      setAttachment(result)\n    }\n\n    if(theFile) { // Choose File 버튼 눌렀다가 그냥 취소한 경우 필터링\n      reader.readAsDataURL(theFile)\n    }\n  }\n  \n  const onClearAttachment = () => {\n    setAttachment(\"\")\n    document.querySelector('input[type=file]').value = '' // Choose File 버튼 눌렀다가 그냥 취소한 경우 value 초기화\n  }\n\n  return (\n    <div className=\"file-module\">\n      <label \n        className=\"file-module-label brand-font-color\"\n        htmlFor=\"attach-file\"\n      >\n        <span>Add Photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        className=\"file-module-input\"\n        id=\"attach-file\" \n        type=\"file\"\n        accept=\"image/*\" \n        onChange={onFileChange} \n      />\n      {attachment && (\n        <div className=\"file-module__attachment\">\n          <img\n            className=\"file-module__attachment-image\"\n            style={{backgroundImage: attachment}}\n            src={attachment} \n            width=\"50px\" \n            height=\"50px\" \n            alt=\"upload attachment\"\n          />\n          <div \n            className=\"file-module__attachment-clear\"\n            onClick={onClearAttachment}\n          >\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FileModule","import React, { useState } from \"react\"\nimport { dbService, FIRESTORE_DB_COLLECTION_NAME } from \"fbase\"\nimport { getAttachmentUrl } from \"../utils/fbase\"\nimport FileModule from \"./FileModule\"\n\nconst WarbleFactory = ({ userObj }) => {\n  const [warble, setWarble] = useState(\"\")\n  const [attachment, setAttachment] = useState(\"\")\n\n  const onSubmit = async (event) => {\n    if(warble === \"\") {\n      return\n    }\n\n    event.preventDefault()\n\n    let attachmentUrl = \"\"\n    if(attachment) {\n      attachmentUrl =  await getAttachmentUrl(userObj, attachment)\n    }\n\n    const warbleObj = {\n      text: warble,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    }\n    await dbService.collection(FIRESTORE_DB_COLLECTION_NAME).add(warbleObj)\n\n    setWarble(\"\")\n    setAttachment(\"\")\n  }\n\n  const onChange = (event) => {\n    const {\n      target: {value}\n    } = event\n    setWarble(value)\n  }\n\n  return (\n    <form \n      className=\"warble-factory-form\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"warble-factory-form__container\">\n        <input\n          className=\"warble-factory-form__input-text\" \n          type=\"text\" \n          placeholder=\"What's on your mind?\" \n          maxLength={120} \n          onChange={onChange} \n          value={warble}\n        />\n        <input \n          className=\"warble-factory-form__submit brand-bg-color\"\n          type=\"submit\" \n          value=\"&rarr;\"\n        />\n      </div>\n      <FileModule \n        attachment={attachment}\n        setAttachment={setAttachment}\n      />\n    </form>\n  )\n}\n\nexport default WarbleFactory","import { dbService, FIRESTORE_DB_COLLECTION_NAME } from \"fbase\"\nimport React, { useEffect, useState } from \"react\"\nimport Warble from \"components/Warble\"\nimport WarbleFactory from \"components/WarbleFactory\"\n\nconst Home = ({ userObj }) => {\n  const [warbles, setWarbles] = useState([])\n  \n  useEffect(() => {\n    let isMounted = true\n\n    //[TODO] 로그아웃 후 계속 스냅샷이 돌다가 파이어스토어 규칙(유저 존재)와 부딪혀 에러 발생한다.\n    dbService.collection(FIRESTORE_DB_COLLECTION_NAME).onSnapshot(async snapshot => {\n      const warbleArray = await snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      \n      if(isMounted) {\n        setWarbles(warbleArray)\n      }\n    })\n\n    return () => isMounted = false\n  }, [])\n\n  return (\n    <div className=\"home container\">\n      <WarbleFactory userObj={userObj} />\n      <div className=\"home__warbles\">\n        {warbles.map(warble => (\n          <Warble \n            key={warble.id} \n            warbleObj={warble} \n            isOwner={warble.creatorId === userObj.uid} \n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import { authService, dbService, FIRESTORE_DB_COLLECTION_NAME } from \"fbase\"\nimport React, { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { getAttachmentUrl } from \"../utils/fbase\"\nimport Warble from \"components/Warble\"\nimport FileModule from \"../components/FileModule\"\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory()\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n  const [attachment, setAttachment] = useState(\"\")\n  const [myWarbles, setMyWarbles] = useState([])\n  const [isShowEditProfile, setIsShowEditProfile] = useState(false)\n\n  const onLogOutClick = () => {\n    authService.signOut()\n    history.push(\"/\")\n  }\n  \n  const onChange = (event) => {\n    const {\n      target: { value }\n    } = event\n\n    setNewDisplayName(value)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    \n    let attachmentUrl = \"\"\n    if(attachment) {\n      attachmentUrl =  await getAttachmentUrl(userObj, attachment)\n    }\n\n    const {displayName, photoURL} = userObj\n\n    if(newDisplayName && displayName !== newDisplayName) {\n      await userObj.updateProfile({displayName: newDisplayName})      \n    }\n    if(attachmentUrl && photoURL !== attachmentUrl) {\n      await userObj.updateProfile({photoURL: attachmentUrl})\n    }\n\n    setAttachment(\"\")\n    refreshUser() // update user for react dom\n  }\n\n  const getMyWarbles = async () => {\n    const warbles = await dbService\n                        .collection(FIRESTORE_DB_COLLECTION_NAME)\n                        .where(\"creatorId\", \"==\", userObj.uid)\n                        .orderBy(\"createdAt\", \"desc\")\n                        .get()\n\n    const myWarbleArray = warbles.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }))\n\n    setMyWarbles(myWarbleArray)\n  }\n\n  const toggleEditProfile = () => {\n    setIsShowEditProfile(!isShowEditProfile)\n  }\n\n  useEffect(() => {\n    let isMounted = true\n\n    dbService.collection(FIRESTORE_DB_COLLECTION_NAME).onSnapshot(() => { \n      if(isMounted) {\n        getMyWarbles()\n      }\n    })\n\n    return () => isMounted = false\n  }, [])\n\n  return (\n    <div className=\"profile container\">\n      <div\n        className=\"profile-edit-button\" \n        onClick={toggleEditProfile}\n      >\n        <h1>Edit Profile</h1>\n      </div>\n      {isShowEditProfile && (\n        <>\n          <FileModule \n            attachment={attachment}\n            setAttachment={setAttachment}\n          />\n          <form \n            className=\"profile-form\"\n            onSubmit={onSubmit}\n          >\n            <input \n              className=\"profile-form__input form-input\"\n              type=\"text\" \n              placeholder=\"Display name\" \n              value={newDisplayName}\n              autoFocus\n              onChange={onChange} \n            />\n            <input\n              className=\"profile-form__submit form-btn brand-bg-color\"\n              type=\"submit\" \n              value=\"Update Profile\" \n            />\n          </form>\n        </>\n      )}\n      <div className=\"profile__my-warbles\">\n        <h1>My warbles</h1>\n        <div className=\"profile__my-warbles-contents\">\n          {(myWarbles.length > 0) ? (\n            myWarbles.map(warble => (\n              <Warble \n                key={warble.id} \n                warbleObj={warble} \n                isOwner={warble.creatorId === userObj.uid} \n              />\n            ))\n          ) : (\n            <div className=\"profile__my-warbles-loading\">loading...</div>\n          )}\n        </div>\n      </div>\n      <span \n        className=\"profile-form__cancel form-btn brand-bg-color cancel-btn\" \n        onClick={onLogOutClick}\n      >Log Out</span>\n    </div>\n  )\n}\n\nexport default Profile","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li>\n          <Link \n            to=\"/\"\n            className=\"navigation__list--link\"\n          >\n            <FontAwesomeIcon \n              icon={faTwitter}\n              color={\"#04AAFF\"}\n              size=\"2x\" \n            />\n            <span className=\"navigation__list--link-home brand-font-color\">Home</span>\n          </Link>\n        </li>\n        <li>\n          <Link \n            to=\"/profile\"\n            className=\"navigation__list--link\"\n          >\n            {userObj.photoURL ? (\n              <img src={userObj.photoURL} width=\"28\" height=\"28\" alt=\"profile image\"/>\n            ) : (\n              <FontAwesomeIcon\n                icon={faUser}\n                color={\"#04AAFF\"}\n                size=\"2x\"\n              />\n            )}\n            <span className=\"navigation__list--link-profile brand-font-color\">{\n              userObj.displayName \n              ? `${userObj.displayName}의 Profile` \n              : 'Profile'\n            }</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation","import React from \"react\"\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Auth from \"routes/Auth\"\nimport Home from \"routes/Home\"\nimport Profile from \"routes/Profile\"\nimport Navigation from \"./Navigation\"\n\nconst AppRouter = ({ userObj, refreshUser }) => {\n  const isLoggedIn = Boolean(userObj)\n\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div className=\"router\">\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile \n                  userObj={userObj}\n                  refreshUser={refreshUser} \n                />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter","const defaultUser = {\n  displayName: 'default',\n  photoURL: ''\n}\n\nexport default defaultUser","import React, { useEffect, useState } from 'react'\nimport AppRouter from 'components/Router'\nimport { authService } from 'fbase'\nimport defaultUser from 'user'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    let isMounted = true\n\n    authService.onAuthStateChanged(user => {\n      if(isMounted) {\n        setUserObj(user ? {\n          displayName: user.displayName || defaultUser.displayName,\n          photoURL: user.photoURL || defaultUser.photoURL,\n          uid: user.uid,\n          updateProfile: (args) => {\n            user.updateProfile(args)\n          }\n        } : null)\n\n        setInit(true)\n      }\n    })\n\n    return () => isMounted = false\n  }, [])\n\n\n  //[TODO] profile update 할 때 두번 업데이트 서밋해야 변경사항 실시간 감지한다.\n  const refreshUser = () => {\n    const user = authService.currentUser\n\n    setUserObj({\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          userObj={userObj} \n          refreshUser={refreshUser} \n        /> \n      ) : (\n        <div className=\"app__init\">Initializing...</div>\n      )}\n      <footer className=\"brand-font-color\">&copy Warbler {new Date().getFullYear()}</footer>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport \"./styles/index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}